{
  "name": "Distributed Computer Systems Architecture",
  "tagline": "CSIS 604 - Fall 2016",
  "body": "## Important Links\r\n* [Facebook Group](https://www.facebook.com/groups/293624717672980/)\r\n* [Lectures](https://lowcountrygraduatecenter.mediasite.com)\r\n** You must navigate Harbor Walk -> Computer Science ... 604\r\n* [Course Materials, Slides, etc](https://www.dropbox.com/sh/x9iayt9af5e6zk8/AADDNf0GNyzHkyFfSu65UL9va?dl=0)\r\n* [VirtualBox](https://www.virtualbox.org/wiki/Downloads)\r\n* [Ubuntu Server](http://www.ubuntu.com/download/server)\r\n\r\n# Syllabus\r\n## Official Course Description\r\n<p align=\"justify\">\r\n<a href=\"http://www.cofc.edu\"><img src=\"http://freyja.cs.cofc.edu/cofc.sepng\" height=\"50\" align=\"right\" hspace=\"10px\"> </a>\r\nThis course covers basic techniques for the design and construction of distributed systems. Its aim is to give the skills needed to build simple systems and to identify key issues for the analysis of distribution problems.\r\n</p>\r\n\r\n## Required Text\r\nDistributed Systems: Principles and Paradigms by Tanenbaum and van Steen - http://www.distributed-systems.net/index.php?id=distributed-systems-principles-and-paradigms\r\n\r\nThe copyright has been returned to the author, and now the book is free! You can download it using the link provided above.\r\n\r\n## Course Details\r\n\r\n### Contact Information\r\n* Professor: Dr. Paul Anderson\r\n* Office: 313 HWEA\r\n* Office Hours: Tuesday and Thursday from 10 to 11. My door is always open (even when it isn't). I always love to hear from students. My preferred method of e-contact is the Facebook group as I can respond to questions there quickly and for everyone to benefit. If you would like to use e-mail I will endeavor to respond within 24 hours.\r\n* E-mail: andersonpe2@cofc.edu\r\n* Office Phone: 843-953-8151\r\n* Facebook: andersonpe2@cofc.edu\r\n\r\n### Course (learning) outcomes\r\n1. Learn and apply the theory of distributed systems, including architectures, processes, communication, synchronization, consistency and replication, distributed file systems, big data processing systems, distributed object-based systems, web-based systems, and coordination-based systems.\r\n\r\n2. Implement 2 - 4 large scale distributed systems that provide solutions for problems for the following applications: big data-oriented, CPU intensive, web-based, and cloud-based.\r\n\r\n3. Research modern distributed system problems and proposed solutions\r\n\r\n### Grading Policy\r\n* Exams - 40%\r\n* Programming Assignments - 40%\r\n* Discussions - 20%\r\n\r\nGrading Scale: A: 90-100; B: 80-89; C: 70-79; F: <70. Plusses will be used at the discretion of the instructor.\r\n\r\nGrading Guidelines: Submitted work requires Analysis, Evaluation, and Creation of ideas, concepts, and materials into various deliverables (e.g., see revised Bloom's Taxonomy and reference below).\r\n\r\n* The grade of A is for work that involves high-quality achievement in all three Bloom areas.\r\n* The grade of B is for work that involves high-quality achievement in at least two Bloom areas, and medium-level achievement in the other.\r\n* The grade of C is for work that involves high-quality achievement in at least one Bloom area, and medium-level achievement in the others.\r\n* The grade of F is for work that does not meet above criteria.\r\n\r\nReference: Errol Thompson, Andrew Luxton-Reilly, Jacqueline L. Whalley, Minjie Hu, and Phil Robbins. 2008. Bloom's taxonomy for CS assessment. In Proceedings of the tenth conference on Australasian computing education - Volume 78 (ACE '08), Simon Hamilton and Margaret Hamilton (Eds.), Vol. 78. Australian Computer Society, Inc., Darlinghurst, Australia, Australia, 155-161.\r\n\r\nFeedback will be given as quickly as possible with a goal of within a week of the assignment due date.\r\n\r\n### Course Structure and Philosophy\r\n\r\nThis course will be taught in roughly two modules. The first is a discussion of the principles, background, and theory of distributed systems. This will be supported by the required textbook. The second module of the course will focus on implementation. In module 1, each day will go as follows: 1. Exam over previous week's material; 2. Overview lecture on the chapter; 3. 15 - 30 minute team individual study (details below); 4. Discussion presentations to the class.\r\n\r\n### Exams \r\n\r\nDuring the first module, exams will be given every Tuesday at the beginning of class (except the first class). There is no final exam for this course. Each exam will have an in-class portion and a take home portion. The take home portion is due at the beginning of class the day of the exam.\r\n\r\n### Programming Assignments\r\n\r\nProgramming assignments will be assigned in module 2. They will consist of both short skill building exercises and longer more in-depth projects.\r\n\r\n### Lectures\r\n\r\nApproximately an hour long each week summarizing the chapter and content for the week.\r\n\r\n### Discussions\r\n\r\nDiscussions will be conducted following lectures. They will work as follows. Teams of 3 people will meet and discuss the lecture for 15 - 30 minutes. They are tasked to research and expand upon a topic provided in the lecture using the textbook, the internet, etc. Topics will be assigned at random. Team lead must rotate. Then each team will present what they have discovered to the class in an 8 minute presentation. \r\n\r\n### Implementation Days\r\nImplementation days are lab days. You must attend the entire time and work on your assignments and projects.\r\n\r\n### Honor Code\r\n\r\nYou must do your work alone (or with your teammates, for group assignments).\r\nYou must identify your sources of material and inspiration. It is a violation of the honor code to present someone else's work or ideas as your own.\r\nIn any course deliverable, you must always identify the person(s) that helped you (directly or indirectly), if any, and explain their contribution to your work.\r\nAlso see the College of Charleston Student Handbook, especially sections on The Honor Code (p. 11), and Student Code of Conduct (p. 12). There is other useful information there.\r\nClassroom Policies\r\n\r\nNo late days will be allowed without an excuse. Falling behind on assignments will make it difficult to achieve the learning outcomes of this course.\r\n\r\n### Late Policy\r\n\r\nNo late days will be allowed without a documented excuse.\r\n\r\n## Take Home Exam Policy\r\nFor each take home exam, you must upload your solutions to an OAKS dropbox by the due date. For each numbered portion of the assignment, you must complete the following.\r\n\r\nhttps://www.dropbox.com/s/d2h2evvs3sf0nt4/exam-1.1.1.docx?dl=0\r\n\r\nFailure to do so will result in an automatic 10% deduction from your score. Make sure you have a file for each portion of the exam. Make sure you don't deviate from the numbering scheme. All will be well :)\r\n\r\n## Schedule\r\n(All details are subject to change)\r\n\r\n### Week 1 (8/23)\r\nChapter 1 and 2\r\n\r\n#### Group topics\r\n1. Centralized Architectures\r\n2. Application Layering\r\n3. Structured Peer-to-Peer Applications\r\n4. Unstructured Peer-to-Peer Applications\r\n5. Hybrid Systems\r\n6. Architectures versus Middleware\r\n7. Self-management in distributed systems\r\n8. Compare and contrast layered architectures, object-based architectures, data-centered architectures, and event-based architectures\r\n\r\n[Take Home Exam 1](https://anderson-lab.github.io/take-home-exam-1-csis-604)\r\n\r\n### Week 2 (8/30)\r\nChapter 3\r\n\r\n#### Group topics\r\n1. Traditional Threads\r\n2. User space vs kernel vs hybrid\r\n3. Multithreaded clients\r\n4. Architecture of Virtual Systems\r\n5. Servers focusing on state, stateless, etc\r\n6. Server clusters\r\n7. Distributed Servers: PlanetLab\r\n8. Migration\r\n\r\n[Take Home Exam 2](https://anderson-lab.github.io/take-home-exam-2-csis-604)\r\n\r\n### Week 3 (9/6)\r\nOut of town\r\n\r\n### Week 4 (9/13)\r\nChapter 4\r\n\r\n### Week 5 (9/20)\r\nChapter 5\r\n\r\n### Week 6 (9/27)\r\nChapter 6\r\n\r\n### Week 7 (10/4)\r\nClass starts at 7 PM because of JIAB\r\n\r\nChapter 7\r\n\r\n### Week 8 (10/11)\r\nChapter 8\r\n\r\n### Week 9 (10/18)\r\nChapter 10\r\n\r\n### Week 10 (10/25)\r\nChapter 11\r\n\r\n### Week 11 (11/1)\r\nChapter 12\r\n\r\n### Week 12 (11/8)\r\nNo class. Fall break.\r\n\r\n### Week 13 (11/15)\r\nImplementation\r\n\r\n### Week 14 (11/22)\r\nImplementation\r\n\r\n### Week 15 (11/29)\r\nImplementation\r\n\r\n# <a href=\"http://anderson-lab.github.io/\">Anderson Data Science Research Lab</a>\r\n\r\n<p align=\"justify\">\r\n<a href=\"http://anderson-lab.github.io/\"><img src=\"http://freyja.cs.cofc.edu/Paul-labs-logo.png\" alt=\"Data Science Research Lab\" height=\"100\" align=\"right\"  hspace=\"10px\"/></a>\r\nThe Anderson Data Science Research Lab specializes in applying data mining, machine learning, and artificial intelligence to the fields of bioinformatics, genomics, and metabolomics. We develop algorithms and software to tackle some of the most challenging and interesting data intensive problems in the life sciences. Our research interests include data science, big data, pattern analysis in high-dimensionality data sets, evolutionary computation and optimization, machine learning, computational genomics, cloud computing, computational metabolomics, and eScience. We currently have multidisciplinary projects underway in metabolomics, human cognition, toxicology, marine biology, medical genomics, biomedical informatics, and marine genomics.\r\n</p>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}